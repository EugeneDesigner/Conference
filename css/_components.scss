$medium: 669px;
$large: 1024px;



/**
 * FEATURES house three features in one row. Powered by flexbox,
 * this allows for a bottom alignment of each featureâ€™s anchor. Use the
 * <code>$gutter</code> variable to pass you preferred gutter width.
 *
 * Emmet: .features>(div>(.icon>img)+h4+p+a)*3
 */
@mixin features($gutter: 3rem) {
    > * {
        background-color: #EEE;
        margin-bottom: 2rem;
        margin-left: auto;
        margin-right: auto;
        padding: 2rem;
        text-align: center;
        img,
        h3,
        p {
            margin-bottom: 1rem;
        }
        .button {
            margin-bottom: 0;
        }
    }
    @media only screen and (min-width: $large) {
        display: flex;
        flex-flow: row nowrap;
        justify-content: space-between;
        > * {
            display: flex;
            flex: 1 0 0;
            flex-direction: column;
            margin-left: $gutter;
            margin-right: 0;
            .button {
                align-self: center;
                margin-top: auto;
            }
            &:first-child {
                margin-left: 0;
            }
        }
    }
}


/**
 * The LOGIN mixin is a basic implementation of a login module that includes a
 * username input, password input, submit button, forgot password link, and
 * remember me checkbox
 *
 * Emmet: .login>form>(div.text>label{Username}+input)+(div.password>label{Password}+input[type="password"])+div.actions>(.submit>button{Login})+(label>input[type="hidden"]+input[type="checkbox"])+a{Forgot Your Password?}
 */
@mixin login {
    background: #EEE;
    margin-left: auto;
    margin-right: auto;
    max-width: 600px;
    padding: 3rem;
    input {
        &:focus {
            box-shadow: 0 0 5px rgba(114, 164, 0, 0.7);
        }
    }
    .submit {
        text-align: center;
    }
    .actions {
        text-align: center;
    }
    @media only screen and (min-width: $medium) {
        .actions {
            align-items: center;
            display: flex;
            flex-flow: row wrap;
            justify-content: space-between;
            > * {
                margin: 0;
                padding: 0;
            }
            label {
                margin-left: 1em;
            }
            a {
                display: block;
                margin-left: auto;
                text-align: right;
            }
        }
    }
}



/**
 * The STICKY-HEADER mixin works with js (sticky-header.plugin.js) to hide the
 * header as you scroll down, and show it as you scroll back up. This is
 * responsive as the "top" value is dynamically set in the
 * js based on the height of the header. Top padding is also added
 * to the body dynamically via js so that the header doesn't overlap any
 * content.
 *
 * Emmet: header.primary
 *
 **/
@mixin sticky-header() {
    position: fixed;
    top: 0;
    transition: top 0.16s cubic-bezier(0, 0.40, 0.70, 1);
    width: 100%;
    z-index: 100;
}
